<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Admin\Base\BaseCrudController;

class ImageCrudController extends BaseCrudController
{
    private $imageableId;
    private $imageableType;

    public function setup()
    {
        parent::setup(); // TODO: Change the autogenerated stub;
        $this->imageableId = \Session::get('imageable_id');
        $this->imageableType = \Session::get('imageable_type');
    }

    protected function setupListOperation()
    {
        parent::setupListOperation(); // TODO: Change the autogenerated
        if ($this->imageableId) {
            $this->crud->addClause('where', 'imageable_id', '=', $this->imageableId);
        }
        if ($this->imageableType) {
            $this->crud->addClause('where', 'imageable_type', '=', $this->imageableType);
        }
        $this->crud->addColumn([
            'name' => 'location',
            'label' => 'Location',
            'type' => 'image',
            'disk' => 'public',
            'width' => '150px',
            'height' => '150px',
        ]);
    }

    protected function setupCreateOperation()
    {
        parent::setupCreateOperation(); // TODO: Change the autogenerated stub
        $idField = [
            'name' => 'imageable_id',
            'label' => "ID объекта",
            'type' => 'number'
        ];
        if ($this->imageableId) {
            $idField['default'] = $this->imageableId;
            $idField['attributes']['readonly'] = 'readonly';
        }
        $typeField = [
            'name' => 'imageable_type',
            'label' => 'Тип (класс) объекта',
        ];
        if ($this->imageableType) {
            $typeField['default'] = $this->imageableType;
            $typeField['attributes']['readonly'] = 'readonly';
        }
        $this->crud->addField($idField);
        $this->crud->addField($typeField);
        $this->crud->addField([
            'name'      => 'location',
            'label'     => 'Image',
            'type'      => 'upload',
            'upload'    => true,
            'disk'      => 'public', // if you store files in the /public folder, please omit this; if you store them in /storage or S3, please specify it;
        ]);
    }
}
