<?php

namespace App\Http\Controllers\Admin\Base;

use App\Traits\Imageable;
use Backpack\CRUD\app\Http\Controllers\CrudController;
use Backpack\CRUD\app\Http\Controllers\Operations\CreateOperation;
use Backpack\CRUD\app\Http\Controllers\Operations\DeleteOperation;
use Backpack\CRUD\app\Http\Controllers\Operations\ListOperation;
use Backpack\CRUD\app\Http\Controllers\Operations\ShowOperation;
use Backpack\CRUD\app\Http\Controllers\Operations\UpdateOperation;

abstract class BaseCrudController extends CrudController
{
    use ListOperation;
    use ShowOperation;
    use CreateOperation;
    use UpdateOperation;
    use DeleteOperation;

    protected bool $hasImage = false;

    public function setup()
    {
        parent::setup(); // TODO: Change the autogenerated stub
        $class = str_replace('CrudController', '', class_basename($this));
        $class = strtolower(\Str::snake($class));
        $model = "App\\Models\\".ucfirst($class);
        $this->crud->setModel($model);
        $this->crud->setRoute(config('backpack.base.route_prefix')."/$class");
        $this->crud->setEntityNameStrings(\Str::singular($class), \Str::plural($class));
        $this->hasImage = in_array(Imageable::class, class_uses($this->crud->model));
    }

    protected function setupCreateOperation() {
        $this->crud->setFromDb();
        if ($this->hasImage) {
            $this->crud->addField([
                'name'      => 'images',
                'type'      => 'images_relationship',
                'attribute' => 'url',
                'disk'      => 'public'
            ]);
            if ($this->crud->getCurrentOperation() == 'update') {
                $entry = $this->crud->getCurrentEntry();
                \Session::put('imageable_id', $entry->id);
                \Session::put('imageable_type', get_class($entry));
            }
        }
    }

    protected function setupUpdateOperation() {
        $this->setupCreateOperation();
    }

    protected function setupListOperation() {
        $this->crud->setFromDb();
    }

}
